{"version":3,"file":"index.js","sources":["../src/config/selectors.js","../src/processors/url-processor.js","../src/processors/file-processor.js","../src/index.js"],"sourcesContent":["/**\n * HTML element selectors and their URL attributes to process\n * @type {Array<{selector: string, attr: string, isAnchor: boolean}>}\n */\nexport const urlSelectors = [\n  { selector: 'a[href]', attr: 'href', isAnchor: true },\n  { selector: 'link[href]', attr: 'href', isAnchor: false },\n  { selector: 'area[href]', attr: 'href', isAnchor: false },\n  { selector: 'script[src]', attr: 'src', isAnchor: false },\n  { selector: 'img[src]', attr: 'src', isAnchor: false },\n  { selector: 'iframe[src]', attr: 'src', isAnchor: false },\n  { selector: 'source[src]', attr: 'src', isAnchor: false },\n  { selector: 'embed[src]', attr: 'src', isAnchor: false },\n  { selector: 'track[src]', attr: 'src', isAnchor: false },\n  { selector: 'form[action]', attr: 'action', isAnchor: false },\n  { selector: 'object[data]', attr: 'data', isAnchor: false },\n  { selector: 'video[poster]', attr: 'poster', isAnchor: false },\n  { selector: 'meta[content]', attr: 'content', isAnchor: false }\n];","import { parse as parseUrl } from 'url';\n\n/**\n * Process relative URLs that start with /\n * @param {Object} params - Processing parameters\n * @param {Object} params.element - Cheerio element\n * @param {string} params.attr - Attribute name (href, src, etc.)\n * @param {string} params.url - URL to process\n * @param {Object} params.opts - Plugin options\n * @param {Function} params.debug - Debug function\n * @returns {Object} Processing result\n */\nexport const processRelativeUrl = ( { element, attr, url, opts, debug } ) => {\n  const newUrl = `/${ opts.basePath }${ url }`;\n  debug( 'Converting relative %s: %s to %s', attr, url, newUrl );\n  element.attr( attr, newUrl );\n  return { localCount: 1, externalCount: 0, processed: true };\n};\n\n/**\n * Process absolute URLs with protocol and hostname\n * @param {Object} params - Processing parameters\n * @param {Object} params.element - Cheerio element\n * @param {string} params.attr - Attribute name (href, src, etc.)\n * @param {string} params.url - URL to process\n * @param {boolean} params.isAnchor - Whether this is an anchor element\n * @param {Set} params.hostnames - Set of local hostnames\n * @param {Object} params.opts - Plugin options\n * @param {Function} params.debug - Debug function\n * @returns {Object} Processing result\n */\nexport const processAbsoluteUrl = ( { element, attr, url, isAnchor, hostnames, opts, debug } ) => {\n  let localCount = 0;\n  let externalCount = 0;\n\n  try {\n    const urlData = parseUrl( url, true );\n\n    // Only process links with protocol and hostname\n    if ( urlData.protocol && urlData.hostname ) {\n      // Check if hostname is in our \"local\" list\n      if ( hostnames.has( urlData.hostname ) ) {\n        // Strip protocol and hostname from local link, prepend base path if provided\n        localCount++;\n        const pathWithQuery = ( urlData.path || urlData.pathname || '' ) + ( urlData.hash || '' );\n        const newUrl = opts.basePath ? `/${ opts.basePath }${ pathWithQuery }` : pathWithQuery;\n        debug( 'Converting local %s: %s to %s', attr, url, newUrl );\n        element.attr( attr, newUrl );\n      } else if ( isAnchor ) {\n        // Add target and rel to external anchor links only\n        externalCount++;\n        debug( 'Adding target and rel to external link: %s', url );\n        element.attr( 'target', '_blank' );\n        element.attr( 'rel', 'noopener noreferrer' );\n      }\n    }\n  } catch ( err ) {\n    debug( 'Error parsing URL %s: %s', url, err.message );\n  }\n\n  return { localCount, externalCount, processed: true };\n};\n\n/**\n * Check if URL should be skipped (special link types for anchors)\n * @param {string} url - URL to check\n * @param {boolean} isAnchor - Whether this is an anchor element\n * @returns {boolean} True if URL should be skipped\n */\nexport const shouldSkipUrl = ( url, isAnchor ) => {\n  return isAnchor && ( url.startsWith( '#' ) || url.startsWith( 'mailto:' ) || url.startsWith( 'tel:' ) );\n};\n\n/**\n * Process a single URL element\n * @param {Object} params - Processing parameters\n * @param {Object} params.element - Cheerio element\n * @param {string} params.attr - Attribute name (href, src, etc.)\n * @param {string} params.url - URL to process\n * @param {boolean} params.isAnchor - Whether this is an anchor element\n * @param {Set} params.hostnames - Set of local hostnames\n * @param {Object} params.opts - Plugin options\n * @param {Function} params.debug - Debug function\n * @returns {Object} Processing stats\n */\nexport const processUrlElement = ( { element, attr, url, isAnchor, hostnames, opts, debug } ) => {\n  // Skip handling of special link types (only for anchors)\n  if ( shouldSkipUrl( url, isAnchor ) ) {\n    debug( 'Skipping special link: %s', url );\n    return { localCount: 0, externalCount: 0 };\n  }\n\n  // Handle relative URLs that start with / (root-relative)\n  if ( url.startsWith( '/' ) && !url.startsWith( '//' ) && opts.basePath ) {\n    return processRelativeUrl( { element, attr, url, opts, debug } );\n  }\n\n  // Handle absolute URLs\n  return processAbsoluteUrl( { element, attr, url, isAnchor, hostnames, opts, debug } );\n};","import * as cheerio from 'cheerio';\nimport { extname } from 'path';\nimport { urlSelectors } from '../config/selectors.js';\nimport { processUrlElement } from './url-processor.js';\n\n/**\n * Check if a file is an HTML file\n * @param {string} filePath - Path to check\n * @returns {boolean} True if file is HTML\n */\nexport const isHTMLFile = ( filePath ) => /\\.html$|\\.htm$/i.test( extname( filePath ) );\n\n/**\n * Process a single HTML file\n * @param {string} file - File path\n * @param {Object} fileData - File data object\n * @param {Object} params - Processing parameters\n * @param {Set} params.hostnames - Set of local hostnames\n * @param {Object} params.opts - Plugin options\n * @param {Function} params.debug - Debug function\n * @returns {Object} Processing statistics\n */\nexport const processHTMLFile = ( file, fileData, { hostnames, opts, debug } ) => {\n  const contents = fileData.contents.toString();\n\n  // Load content into cheerio\n  const $ = cheerio.load( contents, {\n    decodeEntities: false\n  } );\n\n  // Process all elements with URL attributes\n  let linkCount = 0;\n  let localLinkCount = 0;\n  let externalLinkCount = 0;\n\n  // Process each selector type\n  urlSelectors.forEach( ( { selector, attr, isAnchor } ) => {\n    $( selector ).each( function() {\n      const element = $( this );\n      const elementAttributes = element[ 0 ].attribs;\n      const url = elementAttributes[ attr ];\n\n      if ( !url || typeof url !== 'string' ) {\n        return;\n      }\n\n      linkCount++;\n\n      // Process the URL element\n      const { localCount, externalCount } = processUrlElement( { element, attr, url, isAnchor, hostnames, opts, debug } );\n      localLinkCount += localCount;\n      externalLinkCount += externalCount;\n    } );\n  } );\n\n  // Save statistics\n  debug( `File ${ file }: processed ${ linkCount } links (${ localLinkCount } local, ${ externalLinkCount } external)` );\n\n  // Update file contents\n  fileData.contents = Buffer.from( $.html() );\n\n  return { linkCount, localLinkCount, externalLinkCount };\n};","'use strict';\n\nimport { isHTMLFile, processHTMLFile } from './processors/file-processor.js';\n\n/**\n * Debug namespace\n * @type {string}\n */\nconst DEBUG_NAMESPACE = 'metalsmith-safe-links';\n\n/**\n * Metalsmith plugin to process all site URLs across HTML elements:\n * 1. Strips protocol and hostname from URLs to local sites (all elements)\n * 2. Prepends base path to relative URLs starting with / (all elements)\n * 3. Adds target=\"_blank\" and rel=\"noopener noreferrer\" to external anchor links\n * 4. Supports subdirectory deployments by processing both absolute and relative URLs\n * \n * Processes URLs in: <a href>, <link href>, <script src>, <img src>, <iframe src>,\n * <source src>, <embed src>, <track src>, <form action>, <object data>, <video poster>, <area href>, <meta content>\n *\n * @param {Object} options - Plugin options\n * @param {string[]} options.hostnames - Array of hostnames considered \"local\"\n * @param {string} options.basePath - Base path for the site (e.g., \"base-path\" for sites deployed in subdirectories)\n * @returns {Function} Metalsmith plugin function\n */\nconst safeLinks = ( options = {} ) => {\n  // Set default options\n  const opts = {\n    hostnames: [],\n    basePath: '',\n    ...options\n  };\n\n  // Validate required options\n  if ( !opts.hostnames.length ) {\n    console.warn( `${ DEBUG_NAMESPACE }: Missing hostnames array. Plugin will not process any files.` );\n    return ( files, metalsmith, done ) => {\n      setImmediate( done );\n    };\n  }\n\n  // Store hostnames for faster lookups\n  const hostnames = new Set( opts.hostnames );\n\n  /**\n   * Process files\n   * @param {Object} files - Metalsmith files object\n   * @param {Object} metalsmith - Metalsmith instance\n   * @param {Function} done - Callback function\n   */\n  return ( files, metalsmith, done ) => {\n    // Use metalsmith's built-in debug if available\n    const debug = metalsmith.debug( DEBUG_NAMESPACE );\n    debug( 'Processing links with options: %o', opts );\n\n    // Get HTML files only\n    const htmlFiles = Object.keys( files ).filter( isHTMLFile );\n\n    if ( htmlFiles.length === 0 ) {\n      debug( 'No HTML files found to process' );\n      return setImmediate( done );\n    }\n\n    debug( `Processing ${ htmlFiles.length } HTML files` );\n\n    // Process each HTML file\n    htmlFiles.forEach( ( file ) => {\n      processHTMLFile( file, files[ file ], { hostnames, opts, debug } );\n    } );\n\n    setImmediate( done );\n  };\n};\n\n// ESM export\nexport default safeLinks;\n\n// CommonJS export compatibility (will be transformed by microbundle)\nif ( typeof module !== 'undefined' ) {\n  module.exports = safeLinks;\n}"],"names":["urlSelectors","selector","attr","isAnchor","processRelativeUrl","element","url","opts","debug","newUrl","basePath","localCount","externalCount","processed","processAbsoluteUrl","hostnames","urlData","parseUrl","protocol","hostname","has","pathWithQuery","path","pathname","hash","err","message","shouldSkipUrl","startsWith","processUrlElement","isHTMLFile","filePath","test","extname","processHTMLFile","file","fileData","contents","toString","$","cheerio","load","decodeEntities","linkCount","localLinkCount","externalLinkCount","forEach","each","elementAttributes","attribs","Buffer","from","html","DEBUG_NAMESPACE","safeLinks","options","length","console","warn","files","metalsmith","done","setImmediate","Set","htmlFiles","Object","keys","filter","module","exports"],"mappings":"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"}